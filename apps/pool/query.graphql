query CrossChainBundles($first: Int = 1000, $chainIds: [BigInt!]!) {
  crossChainBundles(first: $first, chainIds: $chainIds) {
    id
    chainId
    chainName
    nativePrice
  }
}

query CrossChainPairs(
  $first: Int = 20
  $skip: Int = 0
  $pagination: Pagination
  $where: Pair_filter
  $orderBy: Pair_orderBy = apr
  $orderDirection: OrderDirection = desc
  $block: Block_height
  $chainIds: [BigInt!]!
  $now: Int!
) {
  crossChainPairs(
    first: $first, 
    skip: $skip,
    pagination: $pagination,
    where: $where, 
    orderBy: $orderBy, 
    orderDirection: $orderDirection,
    block: $block, 
    chainIds: $chainIds, 
    now: $now
  ) {
    id
    chainId
    chainName
    chainShortName
    name
    swapFee
    twapEnabled
    volume7d
    source
    token0 {
      name
      id
      decimals
      symbol
    }     
    token1 {
      name
      id
      decimals
      symbol
    }
    liquidityNative
    liquidityUSD
    apr
    daySnapshots(skip: 1, first: 7, orderBy: date, orderDirection: desc, where: { date_lt: $now }) {
      id
      date
      volumeUSD
    }
  }
}

query CrossChainUser($block: Block_height, $id: String, $chainIds: [BigInt!]!, $now: Int!) {
  crossChainUser(id: $id, block: $block, chainIds: $chainIds, now: $now) {
    liquidityPositions {
      balance
      pair {
        id
        chainId
        chainName
        name
        reserve0
        reserve1
        liquidity
        swapFee
        source
        twapEnabled
        volume7d
        token0 {
          id
          name
          decimals
          symbol
        }
        token1 {
          id
          name
          decimals
          symbol
        }
        apr
        liquidityNative
        liquidityUSD
        daySnapshots(skip: 1, first: 7, orderBy: date, orderDirection: desc, where: { date_lt: $now }) {
          id
          date
          volumeUSD
        }
      }
    }
  }
}



query CrossChainPair($id: String!, $now: Int!, $chainId: BigInt!) {
  crossChainPair(id: $id, now: $now, chainId: $chainId) {
    id
    chainId
    chainName
    chainShortName
    name
    reserve0
    reserve1
    liquidity
    source
    token0 {
      name
      id
      decimals
      symbol
    }
    token1 {
      name
      id
      decimals
      symbol
    }
    liquidityNative
    liquidityUSD
    volumeUSD
    apr
    swapFee
    twapEnabled
    hourSnapshots(first: 168, orderBy: date, orderDirection: desc) {
      id
      date
      volumeUSD
      liquidityNative
      liquidityUSD
      transactionCount
    }
    daySnapshots(first: 730, orderBy: date, orderDirection: desc) {
      id
      date
      volumeUSD
      liquidityNative
      liquidityUSD
      transactionCount
    }
    dayChangeData: daySnapshots(first: 2, orderBy: date, orderDirection: desc, where: { date_lt: $now }) {
      id
      date
      volumeUSD
      liquidityNative
      liquidityUSD
      transactionCount
    }
  }
}

query Pair($id: String!, $now: Int!, $chainId: BigInt!) {
  pair(id: $id) {
    id
    chainId
    chainName
    chainShortName
    name
    reserve0
    reserve1
    liquidity
    token0 {
      name
      id
      decimals
      symbol
    }
    token1 {
      name
      id
      decimals
      symbol
    }
    liquidityNative
    liquidityUSD
    volumeUSD
    apr
    swapFee
    twapEnabled
    hourSnapshots(first: 168, orderBy: date, orderDirection: desc) {
      id
      date
      volumeUSD
      liquidityNative
      liquidityUSD
    }
    daySnapshots(first: 730, orderBy: date, orderDirection: desc) {
      id
      date
      volumeUSD
      liquidityNative
      liquidityUSD
    }
    dayChangeData: daySnapshots(first: 2, orderBy: date, orderDirection: desc, where: { date_lt: $now }) {
      id
      date
      volumeUSD
      liquidityNative
      liquidityUSD
      transactionCount
    }

  }
}

query EthereumBlocks($where: Block_filter) {
  blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: $where) {
    id
    number
    timestamp
  }
}

query Bar($id: String = "xSushi") {
  xsushi(id: $id) {
    sushiXsushiRatio
    apr1m
    apr3m
    apr6m
    apr12m
  }
}

query CrossChainFarms($first: Int = 1000, $skip: Int = 0, $where: Pair_filter, $orderBy: Pair_orderBy, $orderDirection: OrderDirection $block: Block_height, $chainIds: [BigInt!]!) {
  farms {
    id
    chainId
    chainName
    stakeToken {
      id
      name
      symbol
      decimals
      type
      assets
    }
    incentives {
      id
      rewardsAccrued
      rewardsRemaining
      liquidityStaked
      stakeToken {
        id
        name
        symbol
        decimals
        type
        assets
      }
      rewardToken {
        id
        name
        symbol
        decimals
        type
      }
      createdBy {
        id
      }
      startTime
      endTime
      createdAtBlock
      createdAtTimestamp
      modifiedAtBlock
      modifiedAtTimestamp
      rewardsUpdatedAtBlock
      rewardsUpdatedAtTimestamp
    }
  }
}
#
query CrossChainFactories($chainIds: [BigInt!]!) {
  crossChainFactories(chainIds: $chainIds) {
    id
    chainId
    chainName
    pairCount
  }
}

# query UserSubscribedIncentives($id: ID!) {
#   user(id: $id) {
#     id
#     activeSubscriptionCount
#     subscriptions {
#       token {
#         id
#         name
#         symbol
#         decimals
#         incentives {
#           id
#           rewardsAccrued
#           rewardsRemaining
#           liquidityStaked
#           stakeToken {
#             id
#             name
#             symbol
#             decimals
#             type
#             assets
#           }
#           rewardToken {
#             id
#             name
#             symbol
#             decimals
#             type
#           }
#           createdBy {
#             id
#           }
#           startTime
#           endTime
#           createdAtBlock
#           createdAtTimestamp
#           modifiedAtBlock
#           modifiedAtTimestamp
#           rewardsUpdatedAtBlock
#           rewardsUpdatedAtTimestamp
#         }
#       }
#       incentive {
#         id
#       }
#     }
#   }
# }

# query UserSubscriptions($id: ID!) {
#   user(id: $id) {
#     subscriptions {
#       incentive {
#         id
#         farm {
#           id
#         }
#       }
#     }
#   }
# }

# query UserFarms($id: ID!) {
#   user(id: $id) {
#     id
#     stakePositions {
#       id
#       token {
#         id
#         name
#         symbol
#         decimals
#         type
#         assets
#       }
#       liquidity
#       user {
#         id
#       }
#       farm {
#         stakeToken {
#           id
#           name
#           symbol
#           decimals
#           type
#           assets
#         }
#         incentives {
#           id
#           rewardsAccrued
#           rewardsRemaining
#           liquidityStaked
#           stakeToken {
#             id
#             name
#             symbol
#             decimals
#             type
#             assets
#           }
#           rewardToken {
#             id
#             name
#             symbol
#             decimals
#             type
#           }
#           createdBy {
#             id
#           }
#           startTime
#           endTime
#           createdAtBlock
#           createdAtTimestamp
#           modifiedAtBlock
#           modifiedAtTimestamp
#           rewardsUpdatedAtBlock
#           rewardsUpdatedAtTimestamp
#         }
#       }
#       createdAtBlock
#       createdAtTimestamp
#     }
#   }
# }

# query StakePosition($id: ID!) {
#   stakePosition(id: $id) {
#     id
#     token {
#       id
#       name
#       symbol
#       decimals
#       type
#       assets
#     }
#     liquidity
#     user {
#       id
#     }
#     createdAtBlock
#     createdAtTimestamp
#   }
# }

# query UserRewards($id: ID!) {
#   user(id: $id) {
#     id
#     rewards {
#       id
#       claimedAmount
#       claimableAmount
#       modifiedAtBlock
#       modifiedAtTimestamp
#       createdAtBlock
#       createdAtTimestamp
#       user {
#         id
#       }
#       token {
#         id
#         name
#         symbol
#         decimals
#         type
#         assets
#       }
#       incentive {
#         id
#         rewardsAccrued
#         rewardsRemaining
#         liquidityStaked
#         stakeToken {
#           id
#           name
#           symbol
#           decimals
#           type
#           assets
#         }
#         rewardToken {
#           id
#           name
#           symbol
#           decimals
#           type
#         }
#         createdBy {
#           id
#         }
#         startTime
#         endTime
#         createdAtBlock
#         createdAtTimestamp
#         modifiedAtBlock
#         modifiedAtTimestamp
#         rewardsUpdatedAtBlock
#         rewardsUpdatedAtTimestamp
#       }
#     }
#   }
# }

# query UserStakingTransactions($id: ID!, $farmId: ID!) {
#   user(id: $id) {
#     id
#     transactions(where: { farm: $farmId }) {
#       type
#       incentive {
#         id
#       }
#       amount
#       user {
#         id
#       }
#       to {
#         id
#       }
#       token {
#           id
#           name
#           symbol
#           decimals
#           type
#           assets
#       }
#       txHash
#       createdAtBlock
#       createdAtTimestamp
#     }
#   }
# }
