sources:
  - name: Exchange
    handler:
      graphql:
        endpoint: https://{context.subgraphHost:api.thegraph.com/subgraphs/name}/{context.subgraphName:sushiswap/sushiswap-avalanche}
  - name: Staking
    handler:
      graphql:
        endpoint: https://{context.subgraphHost:api.thegraph.com/subgraphs/name}/{context.subgraphName:olastenberg/staking-arbitrum}
  - name: Bar
    handler:
      graphql:
        endpoint: https://{context.subgraphHost:api.thegraph.com/subgraphs/name}/{context.subgraphName:sushi-labs/xsushi}
  - name: Blocks-ethereum
    handler:
      graphql:
        endpoint: https://{context.subgraphHost:api.thegraph.com/subgraphs/name}/{context.subgraphName:blocklytics/ethereum-blocks}
  - name: Trident
    handler:
      graphql:
        endpoint: https://{context.subgraphHost:api.thegraph.com/subgraphs/name}/{context.subgraphName:sushiswap/trident-optimism}

additionalTypeDefs: |
  input Pagination {
    pageIndex: Int! = 0
    pageSize: Int! = 20
  }
  extend type Factory {
    chainId: BigInt!
    chainName: String!
    chainShortName: String!
  }
  extend type Pair {
    volume7d: BigDecimal!
    chainId: BigInt!
    chainName: String!
    chainShortName: String!
  }
  extend type Bundle {
    chainId: BigInt!
    chainName: String!
  }
  extend type Farm {
    chainId: BigInt!
    chainName: String!
  }
  extend type User {
    chainId: BigInt!
    chainName: String!
  }
  extend type Query {
    crossChainPair(id: String!, now: Int!, chainId: BigInt!): Pair!
    crossChainPairs(
      first: Int!,
      skip: Int! = 0, 
      pagination: Pagination,
      where: Pair_filter, 
      orderBy: Pair_orderBy, 
      orderDirection: OrderDirection, 
      chainIds: [BigInt!]!, 
      now: Int!
    ): [Pair!]!
    crossChainBundles(first: Int!, chainIds: [BigInt!]!): [Bundle!]!
    crossChainFarms(first: Int!, chainIds: [BigInt!]!): [Farm!]!
    crossChainUser(id: String!, chainIds: [BigInt!]!, now: Int!): User!
    crossChainFactories(chainIds: [BigInt!]!): [Factory!]!
  }

additionalResolvers:
  - ./resolvers.ts

documents:
  - ./query.graphql

codegen:
  contextType: 'MeshContext & { chainId: string; chainName: string; chainShortName: string; subgraphName: string; subgraphHost: string }'
